{"version":3,"sources":["logo.svg","components/likeButton.js","components/nasaCard.js","components/nasaData.js","App.js","reportWebVitals.js","index.js"],"names":["LikeButton","useState","isClick","setClick","className","onClick","NASACard","props","src","image","id","name","landingDate","launchDate","status","earth_date","class","NASAData","card","setCard","useEffect","axios","get","then","response","console","log","data","photos","catch","err","map","arr","img_src","rover","landing_date","launch_date","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,oDCYEA,EATE,WAAO,IAAD,EACKC,oBAAS,GADd,mBAChBC,EADgB,KACPC,EADO,KAEvB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CAAOF,QAASA,EAASG,QAAS,kBAAMF,GAAUD,SCkBzCI,EArBE,SAAAC,GAEf,OACI,sBAAKH,UAAU,iBAAf,UACE,qBAAKI,IAAKD,EAAME,QAChB,qCAAQF,EAAMG,MACd,oDAAuBH,EAAMI,QAC7B,+CAAkBJ,EAAMK,eACxB,8CAAiBL,EAAMM,cACvB,yCAAYN,EAAMO,UAClB,gDAAmBP,EAAMQ,cACzB,qBAAKL,GAAG,OAAR,SACE,cAAC,EAAD,MAEF,qBAAKM,MAAM,YAAX,SACN,qBAAKA,MAAM,gBCoBEC,EAnCE,WAAO,IAAD,EACGhB,mBAAS,IADZ,mBACdiB,EADc,KACRC,EADQ,KAcrB,OAXAC,qBAAU,WACRC,IACGC,IADH,6HAEGC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,KAAKC,QAC1BT,EAAQK,EAASG,KAAKC,WAEvBC,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,QAC3B,IAID,8BACGZ,EAAKa,KAAI,SAAAC,GACR,OACE,6BACE,cAAC,EAAD,CACEtB,GAAIsB,EAAItB,GACRD,MAAOuB,EAAIC,QACXtB,KAAMqB,EAAIE,MAAMvB,KAChBC,YAAaoB,EAAIE,MAAMC,aACvBtB,WAAYmB,EAAIE,MAAME,YACtBtB,OAAQkB,EAAIE,MAAMpB,OAClBC,WAAYiB,EAAIjB,qBChBfsB,MAVf,WAEE,OACE,sBAAKjC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,QCGSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ddb822a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport Heart from \"react-animated-heart\";\r\n\r\nconst LikeButton = () => {\r\n  const [isClick, setClick] = useState(false);\r\n  return (\r\n    <div className=\"App\">\r\n      <Heart isClick={isClick} onClick={() => setClick(!isClick)} />\r\n    </div>\r\n  );\r\n}\r\n\r\n  export default LikeButton","import React from \"react\";\r\nimport './nasaCard.css';\r\nimport LikeButton from \"./likeButton\";\r\n\r\nconst NASACard = props => {\r\n\r\n  return (\r\n      <div className=\"pictureCaption\">\r\n        <img src={props.image} />\r\n        <p>Id: {props.id}</p>\r\n        <p>Name of the Rover: {props.name}</p>\r\n        <p>landing date: {props.landingDate}</p>\r\n        <p>launch date: {props.launchDate}</p>\r\n        <p>status: {props.status}</p>\r\n        <p>Date of Photo: {props.earth_date}</p>\r\n        <div id=\"like\">\r\n          <LikeButton/>\r\n        </div>\r\n        <div class=\"placement\">\r\n  <div class=\"heart\"></div>\r\n</div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default NASACard;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport NASACard from \"./nasaCard\";\r\n\r\nconst NASAData = () => {\r\n  const [card, setCard] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=MvHA2fWCDiM9Sk8FJBebeZ6DBQoI5bTxVr4sBJxg`)\r\n      .then(response => {\r\n        console.log(response.data.photos)\r\n        setCard(response.data.photos)\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {card.map(arr => {\r\n        return (\r\n          <ul>\r\n            <NASACard\r\n              id={arr.id}\r\n              image={arr.img_src}\r\n              name={arr.rover.name}\r\n              landingDate={arr.rover.landing_date}\r\n              launchDate={arr.rover.launch_date}\r\n              status={arr.rover.status}\r\n              earth_date={arr.earth_date}\r\n            />\r\n          </ul>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NASAData;","import logo from './logo.svg';\nimport './App.css';\nimport Data from \"./components/nasaData\"\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <h1>Spacestagram</h1>\n      <Data />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}